"use strict";(self.webpackChunkdev_site_documentation_template=self.webpackChunkdev_site_documentation_template||[]).push([[634],{51846:function(e,a,n){n.r(a),n.d(a,{_frontmatter:function(){return o},default:function(){return c}});var t=n(58168),s=n(80045),i=(n(88763),n(15680)),r=n(83407);const l=["components"],o={},d=(m="InlineAlert",function(e){return console.warn("Component "+m+" was not imported, exported, or provided by MDXProvider as global scope"),(0,i.mdx)("div",e)});var m;const p={_frontmatter:o},u=r.A;function c(e){let{components:a}=e,n=(0,s.A)(e,l);return(0,i.mdx)(u,(0,t.A)({},p,n,{components:a,mdxType:"MDXLayout"}),(0,i.mdx)("h1",{id:"uploading-assets"},"Uploading Assets"),(0,i.mdx)("p",null,"Learn how assets are uploaded and accessed by Substance 3D APIs."),(0,i.mdx)("h2",{id:"overview"},"Overview"),(0,i.mdx)("p",null,"Substance 3D APIs require assets like 3D models, scenes, and other materials. Assets must be uploaded and then the sources for those assets are specified in ",(0,i.mdx)("inlineCode",{parentName:"p"},"sources")," in the API request body."),(0,i.mdx)("p",null,"Options for defining a source for asset files are:"),(0,i.mdx)("ul",null,(0,i.mdx)("li",{parentName:"ul"},(0,i.mdx)("strong",{parentName:"li"},"Use a Space"),": Substance 3D API offers an endpoint to upload locally stored assets to a digital container called a Space."),(0,i.mdx)("li",{parentName:"ul"},(0,i.mdx)("strong",{parentName:"li"},"Use URLs"),": Use public URLs from services like GitHub or Adobe."),(0,i.mdx)("li",{parentName:"ul"},(0,i.mdx)("strong",{parentName:"li"},"Use Frame.io"),": Frame.io folders can provide access to multiple files.")),(0,i.mdx)("p",null,"This page describes the advantages and details for each of these source types."),(0,i.mdx)("h2",{id:"using-spaces"},"Using Spaces"),(0,i.mdx)("p",null,"A ",(0,i.mdx)("strong",{parentName:"p"},"Space")," is a virtual container for managing assets.\nSeveral file entries can be defined in a single Space, and you can reuse an output Space containing the files generated by a previously executed job."),(0,i.mdx)("p",null,"To create a Space:"),(0,i.mdx)("ul",null,(0,i.mdx)("li",{parentName:"ul"},"Upload local assets ",(0,i.mdx)("a",{parentName:"li",href:"../../guides/create_a_space/index.md"},"using the API endpoint for creating a Space"),". This operation generates a ",(0,i.mdx)("strong",{parentName:"li"},"Space ID")," to use in other Substance 3D API calls."),(0,i.mdx)("li",{parentName:"ul"},"Execute a job that requires merging assets from different sources.")),(0,i.mdx)("p",null,"To use a Space as a source, define it with its ID:"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-json"},'{\n  "space": {\n    "id": "s-example-6ba8-4ca6-842d-898057bf5dbc"\n  }\n}\n')),(0,i.mdx)("h3",{id:"structure-and-lifecycle"},"Structure and lifecycle"),(0,i.mdx)("p",null,"Consider a Space as a file system, with a root directory and subdirectories.\nThe Substance 3D API backend works with Spaces to both retrieve input assets and store generated resources."),(0,i.mdx)("p",null,"A Space is an immutable and temporary storage that ",(0,i.mdx)("strong",{parentName:"p"},"expires after 6 hours"),".\nFor each asset file in the Space, a pre-signed URL is generated where the results of the job can be downloaded for a limited time."),(0,i.mdx)("p",null,"A pre-signed URL ",(0,i.mdx)("strong",{parentName:"p"},"expires after 30 minutes"),". A new pre-signed URL can be obtained by calling the Space endpoint again."),(0,i.mdx)("p",null,"By default, only the owner of a Space has permission to access it."),(0,i.mdx)("h3",{id:"space-response"},"Space response"),(0,i.mdx)("p",null,"After a successful file upload, the response contains details for the newly created Space:"),(0,i.mdx)("ul",null,(0,i.mdx)("li",{parentName:"ul"},(0,i.mdx)("inlineCode",{parentName:"li"},"id"),": A unique Space identifier. This is the ID used to reference the Space in API calls."),(0,i.mdx)("li",{parentName:"ul"},(0,i.mdx)("inlineCode",{parentName:"li"},"url"),": The URL of the Space."),(0,i.mdx)("li",{parentName:"ul"},(0,i.mdx)("inlineCode",{parentName:"li"},"archiveUrl"),": The URL of the archive containing all files from the Space."),(0,i.mdx)("li",{parentName:"ul"},(0,i.mdx)("inlineCode",{parentName:"li"},"files"),": An array of all asset files available in the Space.")),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-json"},'{\n  "id": "s-b93fa62b-6ba8-4ca6-842d-898057bf5dbc",\n  "url": "https://s3d.adobe.io/v1beta/spaces/s-b93fa62b-6ba8-4ca6-842d-898057bf5dbc",\n  "archiveUrl": "https://s3d.adobe.io/v1beta/presigned-spaces/s-b93fa62b-6ba8-4ca6-842d-898057bf5dbc/zip?x-s3d-presigned-token=<auto_generated_token>",\n  "files": [\n    {\n      "name": "WaterBottle.glb",\n      "size": 8961340,\n      "url": "https://s3d.adobe.io/v1beta/presigned-spaces/s-b93fa62b-6ba8-4ca6-842d-898057bf5dbc/files/WaterBottle.glb?x-s3d-presigned-token=<auto_generated_token>"\n    }\n  ]\n}\n')),(0,i.mdx)("h2",{id:"using-urls"},"Using URLs"),(0,i.mdx)("p",null,"Assets can be retrieved from remote storage, like GitHub or a CDN, by using a URL.\nEach URL must point to a single resource."),(0,i.mdx)(d,{variant:"warning",slots:"text",mdxType:"InlineAlert"}),(0,i.mdx)("p",null,"Directories or archives ARE NOT supported."),(0,i.mdx)("p",null,"Only these domains are supported:"),(0,i.mdx)("ul",null,(0,i.mdx)("li",{parentName:"ul"},(0,i.mdx)("inlineCode",{parentName:"li"},"adobe.com")),(0,i.mdx)("li",{parentName:"ul"},(0,i.mdx)("inlineCode",{parentName:"li"},"adobe.io")),(0,i.mdx)("li",{parentName:"ul"},(0,i.mdx)("inlineCode",{parentName:"li"},"adobesensei.io")),(0,i.mdx)("li",{parentName:"ul"},(0,i.mdx)("inlineCode",{parentName:"li"},"amazonaws.com")),(0,i.mdx)("li",{parentName:"ul"},(0,i.mdx)("inlineCode",{parentName:"li"},"frame.io")),(0,i.mdx)("li",{parentName:"ul"},(0,i.mdx)("inlineCode",{parentName:"li"},"github.com")),(0,i.mdx)("li",{parentName:"ul"},(0,i.mdx)("inlineCode",{parentName:"li"},"githubusercontent.com")),(0,i.mdx)("li",{parentName:"ul"},(0,i.mdx)("inlineCode",{parentName:"li"},"googleapis.com")),(0,i.mdx)("li",{parentName:"ul"},(0,i.mdx)("inlineCode",{parentName:"li"},"substance3d.com")),(0,i.mdx)("li",{parentName:"ul"},(0,i.mdx)("inlineCode",{parentName:"li"},"substance3d.io")),(0,i.mdx)("li",{parentName:"ul"},(0,i.mdx)("inlineCode",{parentName:"li"},"windows.net")),(0,i.mdx)("li",{parentName:"ul"},(0,i.mdx)("inlineCode",{parentName:"li"},"zapier.com"))),(0,i.mdx)("p",null,"To use a URL as a source, see this example to retrieve a 3D model from GitHub:"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-json"},'{\n  "url": {\n    "url": "https://raw.githubusercontent.com/KhronosGroup/glTF-Sample-Models/master/2.0/WaterBottle/glTF-Binary/WaterBottle.glb"\n  }\n}\n')),(0,i.mdx)("h2",{id:"using-frameio"},"Using Frame.io"),(0,i.mdx)("p",null,"A Frame.io source can define several file entries from a ",(0,i.mdx)("a",{parentName:"p",href:"https://frame.io"},"Frame.io")," folder.\nAll files present in the Frame.io folder are available for the job to process."),(0,i.mdx)(d,{variant:"warning",slots:"text",mdxType:"InlineAlert"}),(0,i.mdx)("p",null,"A Frame.io ",(0,i.mdx)("strong",{parentName:"p"},"access token")," is required."),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-json"},'{\n  "frame.io": {\n    "folderId": "97ea16ad-1cf6-46c0-8982-ffbd4e2afc27",\n    "accessToken": "<FRAME_IO_ACCESS_TOKEN>"\n  }\n}\n')),(0,i.mdx)("h2",{id:"using-multiple-sources"},"Using multiple sources"),(0,i.mdx)("p",null,"With multiple sources specified in a job definition, all assets are retrieved and then merged into ",(0,i.mdx)("a",{parentName:"p",href:"#using-spaces"},"a new Space"),"."),(0,i.mdx)("p",null,"In this case, it can be handy to define the source ",(0,i.mdx)("strong",{parentName:"p"},"mount point")," to preserve a specific file hierarchy and\navoid file conflicts (for example, two different sources containing files with the same name)."),(0,i.mdx)("h3",{id:"mount-points"},"Mount points"),(0,i.mdx)("p",null,"As an example, say we want to run a ",(0,i.mdx)("a",{parentName:"p",href:"../../guides/render_3d_model/index.md"},"3D Render job")," using assets from two different locations: a 3D model stored on a CDN, and textures files stored in a Frame.io folder. The 3D model is configured to load the textures files from a ",(0,i.mdx)("inlineCode",{parentName:"p"},"textures")," directory."),(0,i.mdx)("p",null,"In that case, we can define the different sources' ",(0,i.mdx)("inlineCode",{parentName:"p"},"mountPoint")," to indicate that these assets need to be in a specific folder:"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-json"},'{\n  "sources": [\n    {\n      "mountPoint": "/", // destination folder\n      "url": { // location of the 3D model file\n        "url": "https://<a-cdn-url>/3dmodel.glb"\n      },\n    },\n    {\n      "mountPoint": "/textures", // destination folder\n      "frame.io": { // location of the texture files (e.g., texture.png)\n        "folderId": "408ee4ee-9204-4fc2-987b-2077e4ae30e0",\n        "accessToken": "<frameio-access-token>"\n      }\n    }\n  ]\n}\n')),(0,i.mdx)("p",null,"These assets will be merged to create a Space with the following structure:"),(0,i.mdx)("pre",null,(0,i.mdx)("code",{parentName:"pre",className:"language-txt"},"├── textures\n│  └── texture.png\n└── 3dmodel.glb\n")))}c.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-getting-started-assets-upload-index-md-2ac1943b977016d99892.js.map