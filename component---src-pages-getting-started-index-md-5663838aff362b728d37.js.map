{"version":3,"file":"component---src-pages-getting-started-index-md-5663838aff362b728d37.js","mappings":"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","sources":["webpack://dev-site-documentation-template/./src/pages/getting_started/index.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/ffs-s3d-api/ffs-s3d-api/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"authentication\"\n    }}>{`Authentication`}</h1>\n    <p>{`Learn how to authenticate requests to Substance 3D APIs.`}</p>\n    <h2 {...{\n      \"id\": \"overview\"\n    }}>{`Overview`}</h2>\n    <p>{`Every request made to Substance 3D APIs must include an encrypted access token.`}</p>\n    <p>{`Your secure, server-side application retrieves an access token by making a request to the `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.adobe.com/content/dam/cc/en/trust-center/ungated/whitepapers/corporate/adobe-identity-management-services-security-overview.pdf\"\n      }}>{`Adobe Identity Management System (IMS)`}</a>{` with your `}<strong parentName=\"p\">{`Client ID`}</strong>{` and `}<strong parentName=\"p\">{`Client Secret`}</strong>{`.`}</p>\n    <h2 {...{\n      \"id\": \"prerequisites\"\n    }}>{`Prerequisites`}</h2>\n    <p>{`This tutorial assumes you have worked with your Adobe Representative and have the following:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`An `}<a parentName=\"li\" {...{\n          \"href\": \"https://developer.adobe.com/\"\n        }}>{`Adobe Developer Console`}</a>{` account.`}</li>\n      <li parentName=\"ul\">{`A `}<a parentName=\"li\" {...{\n          \"href\": \"https://developer.adobe.com/developer-console/docs/guides/projects/projects-empty/\"\n        }}>{`project`}</a>{` with Substance 3D API `}<a parentName=\"li\" {...{\n          \"href\": \"https://developer.adobe.com/developer-console/docs/guides/services/services-add-api-oauth-s2s/\"\n        }}>{`OAuth Server-to-Server credentials set up`}</a>{`.`}</li>\n      <li parentName=\"ul\">{`Access to your `}<strong parentName=\"li\">{`Client ID`}</strong>{` and `}<strong parentName=\"li\">{`Client Secret`}</strong>{` from the `}<a parentName=\"li\" {...{\n          \"href\": \"https://developer.adobe.com/developer-console/docs/guides/services/services-add-api-oauth-s2s/#api-overview\"\n        }}>{`Adobe Developer Console project`}</a>{`. Securely store these credentials and never expose them in client-side or public code.`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"retrieve-an-access-token\"\n    }}>{`Retrieve an access token`}</h2>\n    <p>{`A temporary access token validates calls to the API. `}<a parentName=\"p\" {...{\n        \"href\": \"https://developer.adobe.com/developer-console/docs/guides/services/services-add-api-oauth-s2s#generate-token\"\n      }}>{`This token can be generated directly in the Developer Console`}</a>{`,\nor it can be generated programmatically by following the steps below.`}</p>\n    <ol>\n      <li parentName=\"ol\">{`First, open a secure terminal and export your `}<strong parentName=\"li\">{`Client ID`}</strong>{` and `}<strong parentName=\"li\">{`Client Secret`}</strong>{` as environment variables so that later commands can access them:`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`export S3D_FF_SERVICES_CLIENT_ID=<Your_Client_ID>\nexport S3D_FF_SERVICES_CLIENT_SECRET=<Your_Client_Secret>\n`}</code></pre>\n    <ol {...{\n      \"start\": 2\n    }}>\n      <li parentName=\"ol\">{`Next, run the following command to generate an access token:`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`curl --location 'https://ims-na1.adobelogin.com/ims/token/v3' \\\\\n--header 'Content-Type: application/x-www-form-urlencoded' \\\\\n--data-urlencode 'grant_type=client_credentials' \\\\\n--data-urlencode \"client_id=$S3D_FF_SERVICES_CLIENT_ID\" \\\\\n--data-urlencode \"client_secret=$S3D_FF_SERVICES_CLIENT_SECRET\" \\\\\n--data-urlencode 'scope=openid,AdobeID,read_organizations,email,firefly_api,firefly_enterprise,profile,substance3d_api.spaces.create,substance3d_api.jobs.create'\n`}</code></pre>\n    <p>{`The response will look like this:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n    \"access_token\": \"exampleAccessTokenAsdf123\",\n    \"token_type\": \"bearer\",\n    \"expires_in\": 86399\n}\n`}</code></pre>\n    <p>{`The response includes an `}<inlineCode parentName=\"p\">{`expires_in`}</inlineCode>{` field with the length of time, in seconds, that the access token is valid. Each access token is valid for 24 hours, then your secure server-side application will need to request a new token. The best practice is to securely store the token and refresh it before it expires.`}</p>\n    <ol {...{\n      \"start\": 3\n    }}>\n      <li parentName=\"ol\">{`Export your access token as an environment variable:`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`export S3D_FF_SERVICES_ACCESS_TOKEN=<Your_Access_Token>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"execute-a-test-api-request\"\n    }}>{`Execute a test API request`}</h2>\n    <p>{`Let's make a test call to a Substance 3D API with the access token.`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Make a test call to the `}<a parentName=\"li\" {...{\n          \"href\": \"/ffs-s3d-api/api\"\n        }}>{`Render Model API`}</a>{`:`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`curl --location 'https://s3d.adobe.io/v1/scenes/render-basic' \\\\\n--header 'Content-Type: application/json' \\\\\n--header 'Accept: application/json' \\\\\n--header \"Authorization: Bearer $S3D_FF_SERVICES_ACCESS_TOKEN\" \\\\\n--data '{\n    \"scene\": {\n      \"modelFile\": \"DamagedHelmet.glb\"\n    },\n    \"sources\": [\n    {\n      \"url\": {\n        \"url\": \"https://raw.githubusercontent.com/KhronosGroup/glTF-Sample-Assets/main/Models/DamagedHelmet/glTF-Binary/DamagedHelmet.glb\"\n      }\n    }\n  ]\n}'\n`}</code></pre>\n    <p>{`A successful response will look something like this:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n    \"$schema\": \"https://s3d.adobe.io/schemas/RenderModelResponse.json\",\n    \"url\": \"{JOB_URL}\",\n    \"id\": \"{JOB_ID}\",\n    \"status\": \"running\"\n}\n`}</code></pre>\n    <p>{`You're authenticated!`}</p>\n    <p>{`The response is typical for an asynchronous job. You can `}<a parentName=\"p\" {...{\n        \"href\": \"/ffs-s3d-api/getting_started/asynchronous_jobs/\"\n      }}>{`learn more about asynchronous jobs`}</a>{` or `}<a parentName=\"p\" {...{\n        \"href\": \"/ffs-s3d-api/guides/render_3d_object\"\n      }}>{`explore the Render 3D Model API in the tutorial`}</a>{`.`}</p>\n    {/* Links */}\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","props","_objectWithoutProperties","_excluded","mdx","_extends","mdxType","parentName","isMDXComponent"],"sourceRoot":""}